name: "Lint and Test Helm Charts"
description: "A composite action to lint and test Helm charts using chart-testing and kind."
inputs:
  chartDirs:
    description: "Comma-separated list of root directories containing Helm charts."
    required: false
    default: "."
outputs:
  changed: 
    description: "Indicates if there are changed charts."
    value: ${{ steps.list-changed.outputs.changed }}
runs:
  using: "composite"
  steps:
    - name: Checkout helm chart repository
      env:
        action_repo: ${{ github.action_repository }}
        action_ref: ${{ github.action_ref }}
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        repository: ${{ inputs.repository }}

    - name: Set up Helm
      uses: azure/setup-helm@v4.2.0
      with:
        version: v3.16.3

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
        check-latest: true

    - name: Set up chart-testing
      uses: helm/chart-testing-action@v2.6.1

    - name: Debugging
      run: |
        pwd
      shell: bash

    - name: Run chart-testing (list-changed)
      id: list-changed
      run: |
        changed=$(ct list-changed --chart-dirs "${{ inputs.chartDirs }}" --target-branch "${{ github.event.repository.default_branch }}")
        if [[ -n "$changed" ]]; then
          echo "changed=true" >> "$GITHUB_OUTPUT"
        fi
      shell: bash

    - name: Debugging
      run: |
        echo "Changed: ${{ steps.list-changed.outputs.changed }}"
      shell: bash

    - name: Debugging 2
      run: |
        echo "Changed: ${{ inputs.chartDirs }}"
      shell: bash

    - name: Run chart-testing (lint)
      if: steps.list-changed.outputs.changed == 'true'
      run: ct lint --chart-dirs "${{ inputs.chartDirs }}" --target-branch "${{ github.event.repository.default_branch }}"
      shell: bash

    - name: Create kind cluster
      if: steps.list-changed.outputs.changed == 'true'
      uses: helm/kind-action@v1.12.0

    - name: Run chart-testing (install)
      if: steps.list-changed.outputs.changed == 'true'
      run: ct install --chart-dirs "${{ inputs.chartDirs }}" --target-branch "${{ github.event.repository.default_branch }}"
      shell: bash
